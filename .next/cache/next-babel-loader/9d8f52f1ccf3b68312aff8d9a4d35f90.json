{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime-corejs2/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime-corejs2/helpers/esm/asyncToGenerator\";\nvar _jsxFileName = \"/Users/abdulaliyev/web-projects/colt/react/first-next/pages/index.tsx\";\nimport React from \"react\";\nimport axios from \"axios\";\nimport Link from \"next/link\";\n\nvar Index = function Index(_ref) {\n  var posts = _ref.posts;\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15\n    },\n    __self: this\n  }, React.createElement(\"h1\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16\n    },\n    __self: this\n  }, \"Index Page! \\uD83D\\uDE0A\"), React.createElement(\"ul\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17\n    },\n    __self: this\n  }, posts.map(function (post) {\n    return React.createElement(\"li\", {\n      key: post.id,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 19\n      },\n      __self: this\n    }, React.createElement(Link, {\n      href: \"/post?id=\".concat(post.id),\n      as: post.title.replace(/\\s/g, \"_\").toLowerCase(),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 20\n      },\n      __self: this\n    }, React.createElement(\"a\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 24\n      },\n      __self: this\n    }, post.title)));\n  })));\n};\n\nIndex.getInitialProps =\n/*#__PURE__*/\n_asyncToGenerator(\n/*#__PURE__*/\n_regeneratorRuntime.mark(function _callee() {\n  var url, res;\n  return _regeneratorRuntime.wrap(function _callee$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          url = \"https://jsonplaceholder.typicode.com/posts\";\n          _context.next = 3;\n          return axios.get(url);\n\n        case 3:\n          res = _context.sent;\n          return _context.abrupt(\"return\", {\n            posts: res.data\n          });\n\n        case 5:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, _callee);\n}));\nexport default Index;","map":{"version":3,"sources":["/Users/abdulaliyev/web-projects/colt/react/first-next/pages/index.tsx"],"names":["axios","Link","Index","posts","map","post","id","title","replace","toLowerCase","getInitialProps","url","get","res","data"],"mappings":";;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,IAAP,MAAiB,WAAjB;;AAWA,IAAMC,KAAK,GAAG,SAARA,KAAQ,OAAsB;AAAA,MAAnBC,KAAmB,QAAnBA,KAAmB;AAClC,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gCADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGA,KAAK,CAACC,GAAN,CAAU,UAAAC,IAAI;AAAA,WACb;AAAI,MAAA,GAAG,EAAEA,IAAI,CAACC,EAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,IAAD;AACE,MAAA,IAAI,qBAAcD,IAAI,CAACC,EAAnB,CADN;AAEE,MAAA,EAAE,EAAED,IAAI,CAACE,KAAL,CAAWC,OAAX,CAAmB,KAAnB,EAA0B,GAA1B,EAA+BC,WAA/B,EAFN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAIE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAIJ,IAAI,CAACE,KAAT,CAJF,CADF,CADa;AAAA,GAAd,CADH,CAFF,CADF;AAiBD,CAlBD;;AAoBAL,KAAK,CAACQ,eAAN;AAAA;AAAA;AAAA;AAAA,yBAAwB;AAAA;AAAA;AAAA;AAAA;AAAA;AAChBC,UAAAA,GADgB,GACF,4CADE;AAAA;AAAA,iBAEJX,KAAK,CAACY,GAAN,CAAUD,GAAV,CAFI;;AAAA;AAEhBE,UAAAA,GAFgB;AAAA,2CAGf;AAAEV,YAAAA,KAAK,EAAEU,GAAG,CAACC;AAAb,WAHe;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,CAAxB;AAMA,eAAeZ,KAAf","sourcesContent":["import axios from \"axios\";\nimport Link from \"next/link\";\n\nexport interface Props {\n  posts: Array<{\n    body: string;\n    id: number;\n    title: string;\n    userId: number;\n  }>;\n}\n\nconst Index = ({ posts }: Props) => {\n  return (\n    <div>\n      <h1>Index Page! ðŸ˜Š</h1>\n      <ul>\n        {posts.map(post => (\n          <li key={post.id}>\n            <Link\n              href={`/post?id=${post.id}`}\n              as={post.title.replace(/\\s/g, \"_\").toLowerCase()}\n            >\n              <a>{post.title}</a>\n            </Link>\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n};\n\nIndex.getInitialProps = async () => {\n  const url: string = \"https://jsonplaceholder.typicode.com/posts\";\n  const res = await axios.get(url);\n  return { posts: res.data };\n};\n\nexport default Index;\n"]},"metadata":{},"sourceType":"module"}